/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package VISTA;

import CONTROL.Validacion;
import CONTROL.ValidacionUsuario;
import MODELO.ConexionDB;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class NuevoUsuario extends javax.swing.JFrame {
Validacion validacion = new Validacion();

    /**
     * Creates new form NuevoUsuario
     */
    public NuevoUsuario() {
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        cargarTablaUsuarios();
        
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblLogo = new javax.swing.JLabel();
        lblTitulo = new javax.swing.JLabel();
        lblNUsuario = new javax.swing.JLabel();
        txtNombreUsuario = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        btnVolver = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnAñadir = new javax.swing.JButton();
        lblApellidos = new javax.swing.JLabel();
        txtApellidos = new javax.swing.JTextField();
        lblCorreo = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        lblContraseña = new javax.swing.JLabel();
        txtContraseña = new javax.swing.JTextField();
        lblTexto2 = new javax.swing.JLabel();
        cmbTipoUsuario = new javax.swing.JComboBox<>();
        btnModificar = new javax.swing.JButton();
        btnAñadir2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnSiguiente = new javax.swing.JButton();
        btnAtras = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Desing/Hope logo 13.png"))); // NOI18N
        getContentPane().add(lblLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        lblTitulo.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(51, 51, 51));
        lblTitulo.setText("NUEVO USUARIO");
        getContentPane().add(lblTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, -1, -1));

        lblNUsuario.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        lblNUsuario.setText("Nombre de usuario");
        getContentPane().add(lblNUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 200, 330, 20));

        txtNombreUsuario.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        getContentPane().add(txtNombreUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 220, 550, 40));

        lblNombre.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        lblNombre.setText("Nombre");
        getContentPane().add(lblNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 280, 270, 20));

        txtNombre.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        getContentPane().add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 300, 540, 40));

        btnVolver.setBackground(new java.awt.Color(204, 204, 204));
        btnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Desing/Volver.png"))); // NOI18N
        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        getContentPane().add(btnVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 660, 120, 30));

        btnEliminar.setBackground(new java.awt.Color(204, 204, 204));
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Desing/Eliminar.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 670, 120, 30));

        btnAñadir.setBackground(new java.awt.Color(204, 204, 204));
        btnAñadir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Desing/Añadir.png"))); // NOI18N
        btnAñadir.setText("Añadir");
        btnAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirActionPerformed(evt);
            }
        });
        getContentPane().add(btnAñadir, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 670, 120, 30));

        lblApellidos.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        lblApellidos.setText("Apellidos");
        getContentPane().add(lblApellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 280, 270, 20));

        txtApellidos.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        getContentPane().add(txtApellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 300, 540, 40));

        lblCorreo.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        lblCorreo.setText("Correo");
        getContentPane().add(lblCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 350, 260, 20));

        txtCorreo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        getContentPane().add(txtCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 370, 540, 40));

        lblContraseña.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        lblContraseña.setText("Contraseña");
        getContentPane().add(lblContraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 350, 280, 20));

        txtContraseña.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        getContentPane().add(txtContraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 370, 540, 40));

        lblTexto2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        lblTexto2.setForeground(new java.awt.Color(153, 153, 153));
        lblTexto2.setText("Complete la información con sus datos");
        getContentPane().add(lblTexto2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 150, -1, 20));

        cmbTipoUsuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tipo de usuario", "Administrador", "Profesor", "Alumno" }));
        cmbTipoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoUsuarioActionPerformed(evt);
            }
        });
        getContentPane().add(cmbTipoUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 220, 320, 40));

        btnModificar.setBackground(new java.awt.Color(204, 204, 204));
        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Desing/Editar.png"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        getContentPane().add(btnModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 670, 120, 30));

        btnAñadir2.setBackground(new java.awt.Color(204, 204, 204));
        btnAñadir2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Desing/Document Check.png"))); // NOI18N
        btnAñadir2.setText("Refrescar");
        btnAñadir2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadir2ActionPerformed(evt);
            }
        });
        getContentPane().add(btnAñadir2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 670, 120, 30));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "USUARIO", "NOMBRE", "APELLIDO", "CORREO", "TIPO"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 430, 1160, 130));

        btnSiguiente.setText("SIGUIENTE");
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });
        getContentPane().add(btnSiguiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 580, 110, -1));

        btnAtras.setText("ATRAS");
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });
        getContentPane().add(btnAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 580, 100, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
    String nombreUsuario = txtNombreUsuario.getText();

        Connection con = ConexionDB.conectar();
        if (con != null) {
            try {
                String sql = "DELETE FROM usuarios WHERE nombre_usuario = ?";
                PreparedStatement stmt = con.prepareStatement(sql);
                stmt.setString(1, nombreUsuario);

                int filasAfectadas = stmt.executeUpdate();
                if (filasAfectadas > 0) {
                    JOptionPane.showMessageDialog(this, "Usuario eliminado correctamente.");
                    cargarTablaUsuarios(); // Recargar la tabla después de eliminar el usuario
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error al eliminar el usuario: " + e.getMessage());
            } finally {
                ConexionDB.cerrarConexion(con);
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadirActionPerformed
    String nombreUsuario = txtNombreUsuario.getText();
        String nombre = txtNombre.getText();
        String apellidos = txtApellidos.getText();
        String correo = txtCorreo.getText();
        String contrasena = txtContraseña.getText();
        String tipoUsuario = (String) cmbTipoUsuario.getSelectedItem();

        // Validaciones
        if (!ValidacionUsuario.camposNoVacios(correo, contrasena)) {
            JOptionPane.showMessageDialog(this, "El correo y la contraseña no pueden estar vacíos.");
            return;
        }

        if (!ValidacionUsuario.tipoUsuarioValido(tipoUsuario)) {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona un tipo de usuario.");
            return;
        }

        if (!ValidacionUsuario.valCorreo(correo)) {
            JOptionPane.showMessageDialog(this, "El correo electrónico no tiene un formato válido.");
            return;
        }

        if (!ValidacionUsuario.valContraseña(contrasena)) {
            JOptionPane.showMessageDialog(this, "La contraseña debe tener al menos 6 caracteres.");
            return;
        }

        // Proceder con la inserción en la base de datos
        Connection con = ConexionDB.conectar();
        if (con != null) {
            try {
                String sql = "INSERT INTO usuarios (nombre_usuario, nombre, apellidos, correo, contrasena, tipo_usuario) VALUES (?, ?, ?, ?, ?, ?)";
                PreparedStatement stmt = con.prepareStatement(sql);
                stmt.setString(1, nombreUsuario);
                stmt.setString(2, nombre);
                stmt.setString(3, apellidos);
                stmt.setString(4, correo);
                stmt.setString(5, contrasena);
                stmt.setString(6, tipoUsuario);

                int filasAfectadas = stmt.executeUpdate();
                if (filasAfectadas > 0) {
                    JOptionPane.showMessageDialog(this, "Usuario agregado correctamente.");
                    cargarTablaUsuarios(); // Recargar la tabla después de agregar el usuario
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error al agregar el usuario: " + e.getMessage());
            } finally {
                ConexionDB.cerrarConexion(con);
            }
        }
    }//GEN-LAST:event_btnAñadirActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
    String nombreUsuario = txtNombreUsuario.getText(); // Asegúrate de que el texto se obtiene correctamente
    String nombre = txtNombre.getText();
    String apellidos = txtApellidos.getText();
    String correo = txtCorreo.getText();
    String contrasena = txtContraseña.getText();
    String tipoUsuario = (String) cmbTipoUsuario.getSelectedItem();

    // Verificamos que se haya seleccionado un usuario de la tabla
    int filaSeleccionada = jTable1.getSelectedRow();
    if (filaSeleccionada == -1) {
        JOptionPane.showMessageDialog(this, "Por favor, selecciona un usuario de la tabla.");
        return;
    }

    // Depuración: Verificar el contenido de la fila seleccionada
    String nombreUsuarioAnterior = jTable1.getValueAt(filaSeleccionada, 0).toString();
    System.out.println("Nombre de usuario anterior: " + nombreUsuarioAnterior); // Depuración

    // Validaciones
    if (!ValidacionUsuario.camposNoVacios(correo, contrasena)) {
        JOptionPane.showMessageDialog(this, "El correo y la contraseña no pueden estar vacíos.");
        return;
    }

    if (!ValidacionUsuario.tipoUsuarioValido(tipoUsuario)) {
        JOptionPane.showMessageDialog(this, "Por favor, selecciona un tipo de usuario.");
        return;
    }

    if (!ValidacionUsuario.valCorreo(correo)) {
        JOptionPane.showMessageDialog(this, "El correo electrónico no tiene un formato válido.");
        return;
    }

    if (!ValidacionUsuario.valContraseña(contrasena)) {
        JOptionPane.showMessageDialog(this, "La contraseña debe tener al menos 6 caracteres.");
        return;
    }

    // Proceder con la actualización en la base de datos
    Connection con = ConexionDB.conectar();
    if (con != null) {
        try {
            String sql = "UPDATE usuarios SET nombre = ?, apellidos = ?, correo = ?, contrasena = ?, tipo_usuario = ? WHERE nombre_usuario = ?";
            PreparedStatement stmt = con.prepareStatement(sql);
            stmt.setString(1, nombreUsuario);
            stmt.setString(1, nombre);
            stmt.setString(2, apellidos);
            stmt.setString(3, correo);
            stmt.setString(4, contrasena);
            stmt.setString(5, tipoUsuario);
            stmt.setString(6, nombreUsuarioAnterior); // Utilizamos el nombre de usuario anterior como referencia

            int filasAfectadas = stmt.executeUpdate();
            if (filasAfectadas > 0) {
                JOptionPane.showMessageDialog(this, "Usuario actualizado correctamente.");
                cargarTablaUsuarios(); // Recargar la tabla después de actualizar el usuario
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró el usuario para actualizar.");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al actualizar el usuario: " + e.getMessage());
        } finally {
            ConexionDB.cerrarConexion(con);
        }
    }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnAñadir2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadir2ActionPerformed
 // Limpiar los campos de texto
        txtNombreUsuario.setText("");
        txtNombre.setText("");
        txtApellidos.setText("");
        txtCorreo.setText("");
        txtContraseña.setText("");
        cmbTipoUsuario.setSelectedIndex(0); // Reseteamos el combo box a su valor predeterminado

        // Actualizamos la tabla de usuarios
        cargarTablaUsuarios();
    }//GEN-LAST:event_btnAñadir2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        // Obtenemos el índice de la fila seleccionada
        int filaSeleccionada = jTable1.getSelectedRow();

        // Rellenamos los campos de texto con los datos de la fila seleccionada
        if (filaSeleccionada != -1) {
            txtNombreUsuario.setText(jTable1.getValueAt(filaSeleccionada, 0).toString());
            txtNombre.setText(jTable1.getValueAt(filaSeleccionada, 1).toString());
            txtApellidos.setText(jTable1.getValueAt(filaSeleccionada, 2).toString());
            txtCorreo.setText(jTable1.getValueAt(filaSeleccionada, 3).toString());
            String tipoUsuario = jTable1.getValueAt(filaSeleccionada, 4).toString();
            cmbTipoUsuario.setSelectedItem(tipoUsuario);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        // TODO add your handling code here:
            int totalPaginas = (int) Math.ceil((double) totalUsuarios / usuariosPorPagina);
    if (paginaActual < totalPaginas) {
        paginaActual++;
        cargarTablaUsuarios(); // Recargar los usuarios para la siguiente página
    }
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        // TODO add your handling code here:
        if (paginaActual > 1) {
        paginaActual--;
        cargarTablaUsuarios(); // Recargar los usuarios para la página anterior
    }
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void cmbTipoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTipoUsuarioActionPerformed
   // Método para llenar la tabla de usuarios
private int paginaActual = 1;
private final int usuariosPorPagina = 5;
private int totalUsuarios;

 private void cargarTablaUsuarios() {
        Connection con = ConexionDB.conectar();
        if (con != null) {
            try {
                // Obtener el total de usuarios
                String sqlTotal = "SELECT COUNT(*) FROM usuarios";
                PreparedStatement stmtTotal = con.prepareStatement(sqlTotal);
                ResultSet rsTotal = stmtTotal.executeQuery();
                if (rsTotal.next()) {
                    totalUsuarios = rsTotal.getInt(1);
                }

                // Calcular el rango de registros a mostrar
                int inicio = (paginaActual - 1) * usuariosPorPagina;
                String sql = "SELECT * FROM usuarios LIMIT ? OFFSET ?";
                PreparedStatement stmt = con.prepareStatement(sql);
                stmt.setInt(1, usuariosPorPagina);
                stmt.setInt(2, inicio);
                ResultSet rs = stmt.executeQuery();

                // Limpiar la tabla antes de cargar nuevos datos
                DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                modelo.setRowCount(0);

                // Agregar filas a la tabla
                while (rs.next()) {
                    Object[] fila = {
                        rs.getString("nombre_usuario"),
                        rs.getString("nombre"),
                        rs.getString("apellidos"),
                        rs.getString("correo"),
                        rs.getString("tipo_usuario")
                    };
                    modelo.addRow(fila);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error al cargar la tabla de usuarios: " + e.getMessage());
            } finally {
                ConexionDB.cerrarConexion(con);
            }
        }}
private void actualizarPaginacion() {
    // Deshabilitar el botón "Anterior" si estamos en la primera página
    btnVolver.setEnabled(paginaActual > 1);
    
    // Deshabilitar el botón "Siguiente" si estamos en la última página
    int totalPaginas = (int) Math.ceil((double) totalUsuarios / usuariosPorPagina);
    btnSiguiente.setEnabled(paginaActual < totalPaginas);
}


    // Método para limpiar los campos

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NuevoUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NuevoUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NuevoUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NuevoUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NuevoUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnAñadir;
    private javax.swing.JButton btnAñadir2;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JButton btnVolver;
    private javax.swing.JComboBox<String> cmbTipoUsuario;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblApellidos;
    private javax.swing.JLabel lblContraseña;
    private javax.swing.JLabel lblCorreo;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblNUsuario;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblTexto2;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtContraseña;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreUsuario;
    // End of variables declaration//GEN-END:variables
}
